1/24 Intro to Variables:

Please go through the following code and answer the questions in the corresponding google form.

In python there exists a useful method that returns the kind of object it is called on. It is called type() it works like this.

print(type("hello"))
<type 'str'>

'str' stands for string. A string is an alphanumeric collection with an order. They are always contained in "" or ''

I want you to input the following and take the return take a guess what it means and put your response in the google form.

Call type and print on:

42

10.7

[1,2,3]

{'name': 'Sir Lancelot', 'quest': 'seek the holy grail', 'Favorite color': 'Blue no wait ... AHH'}

------------------------------------------------------------------------------
Variables:

Variables cover quite a bit of ground in python. In best practice a variables name gives an idea of what the variable is assigned to. For examples lst_names might be a good name for a list of names.

var1 = 'Hello'
var2 = 'world'

What happens when you:

print(var1 + var2)

How would you add a space between those Hello and world. Can you find a second way of doing it?

Go through this process and describe how what happens with this variable reassignment:

a = 2

b = a

a = 5

print(a)
print(b)

All of the common math operators are in the mix in python (many more if you involve the packages math, sympy, numpy, matlab...)
+ plus
- minus
* multiply
/ divide

Try all operations between a integer and a string in a print function what do you notice about the outputs.

------------------------------------------------------------------------------

Indexing:

In strings, lists, and dictionaries we can call letters or objects by their place in the string, list or dictionary. Copy and paste the following your python file and see what you notice.

mp = "Flying Circus"

print(mp[4])

print(mp[1:11])

print(mp[-1])

print(mp[6])

print(mp[:3])

print(mp[7:])

print(mp(0:13:2))

Exploration:

Try and write this string backwards.
